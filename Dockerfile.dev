# First stage: Node.js environment
FROM node:20.12.0-alpine as node

RUN apk add --no-cache bash curl && \
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.19

# Second stage: Ruby environment
FROM ruby:3.3.5-alpine

# Copy Node.js and Yarn from the first stage
COPY --from=node /usr/local/bin/node /usr/local/bin/node
COPY --from=node /usr/local/bin/npm /usr/local/bin/npm
COPY --from=node /usr/local/bin/npx /usr/local/bin/npx
COPY --from=node /opt/yarn-* /opt/yarn
RUN ln -fs /opt/yarn/bin/yarn /usr/local/bin/yarn

# Install essential dependencies
RUN apk add --no-cache git build-base libxml2-dev libxslt-dev postgresql-dev postgresql-client tzdata bash vim && \
    cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

# Set environment variables
ENV APP_ROOT /app
ENV LANG=ja_JP.UTF-8 \
    BUNDLE_JOBS=4 \
    BUNDLE_RETRY=3 \
    EDITOR=vim

# Set working directory
RUN mkdir $APP_ROOT
WORKDIR $APP_ROOT

# Copy Gemfile and Gemfile.lock to leverage Docker cache for bundle installs
COPY Gemfile Gemfile.lock ./

# Install Bundler and configure bundler settings
RUN gem update --system && \
    gem install --no-document bundler:2.5.7

RUN bundle config set force_ruby_platform true
RUN bundle install
